package com.palex.Project_one;

import com.palex.practice.Application;
import com.palex.practice.controller.UserController;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.web.context.WebApplicationContext;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@RunWith(SpringRunner.class)
@SpringBootTest(classes = {Application.class})
@AutoConfigureMockMvc

public class UserControllerTest {

    @Autowired
    private WebApplicationContext wac;

    @Autowired
    private MockMvc mockMvc;

    @InjectMocks
    private UserController userController;

    @Test
    public void whenSaveValidInput_thenReturn200andResultSuccess() throws Exception {
        this.mockMvc.perform(post("/api/user/save").contentType(MediaType.APPLICATION_JSON)
                .param("officeId", "2")
                .param("firstName", "Sasha")
                .param("lastName", "Pavlov")
                .param("middleName", "Leonidovich")
                .param("position", "manager")
                .param("phone", "+79852053969")
                .param("docCode", "11")
                .param("docName", "")
                .param("docNumber", "123")
                .param("docDate", "01.07.1985")
                .param("citizenshipCode", "643")
                .param("isIdentified", "ture"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(content().contentType("application/json;charset=UTF-8"))
                .andExpect(jsonPath("$.result").value("success"));
    }

}

